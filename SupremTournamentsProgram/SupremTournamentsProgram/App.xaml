<Application x:Class="SupremTournamentsProgram.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SupremTournamentsProgram"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush Color="#212B38" x:Key="BackgraundColor"/>
            <SolidColorBrush Color="#37465B" x:Key="CardviewColor"/>
            <SolidColorBrush Color="#726EFF" x:Key="OptionsColor"/>
            <SolidColorBrush Color="#08C6AB" x:Key="SecondTextColor"/>
            <SolidColorBrush Color="#5AFFE7" x:Key="TextColor"/>
            <SolidColorBrush x:Key="MaterialDesignBody" Color="White" />

            <!--PRIMARY-->
            <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="#726EFF"/>

            <Style TargetType="TextBox" x:Key="TextBoxStyle" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
                <Setter Property="Foreground" Value="#5AFFE7"/>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="BorderBrush" Value="#726EFF"/>
            </Style>
            
            <Style TargetType="TextBox" x:Key="LargeTextBoxStyle" BasedOn="{StaticResource TextBoxStyle}">
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="AcceptsReturn" Value="True"/>
                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="MaxHeight" Value="80"/>
            </Style>
            
            <Style TargetType="PasswordBox" x:Key="PasswordBoxStyle"  BasedOn="{StaticResource MaterialDesignOutlinedPasswordBox}">
                <Setter Property="Foreground" Value="#5AFFE7"/>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="BorderBrush" Value="#726EFF"/>
            </Style>

            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="#5AFFE7"/>
            </Style>

            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatAccentBgButton}">
                <Setter Property="Background" Value="#726EFF"/>
                <Setter Property="BorderBrush" Value="#726EFF"/>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="Foreground" Value="#5AFFE7"/>
            </Style>

            <Style TargetType="Button" x:Key="MenuButtonStyle" BasedOn="{StaticResource MaterialDesignFlatDarkButton}">
                <Setter Property="Margin" Value="10"/>
                <Setter Property="Foreground" Value="#5AFFE7"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Style>

            <Style TargetType="Rectangle" x:Key="VerticalSeparatorStyle">
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="Width" Value="1"/>
                <Setter Property="Stroke" Value="Black"/>
                <Setter Property="StrokeThickness" Value="3"/>
            </Style>

            <Style TargetType="Button" x:Key="CancelButtonStyle" BasedOn="{StaticResource MaterialDesignFlatAccentBgButton}">
                <Setter Property="Background" Value="#FFFF2E00"/>
                <Setter Property="BorderBrush" Value="#FFFF2E00"/>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="Foreground" Value="Black"/>
            </Style>

            <Style TargetType="Button" x:Key="AcceptButtonStyle" BasedOn="{StaticResource MaterialDesignFlatAccentBgButton}">
                <Setter Property="Background" Value="#348f2e"/>
                <Setter Property="BorderBrush" Value="#348f2e"/>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="TextBlock.Foreground" Value="Black"/>
                <Setter Property="Foreground" Value="Black"/>
            </Style>

            <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
                <Setter Property="BorderBrush" Value="#726EFF"/>
                <Setter Property="Foreground" Value="#5AFFE7"/>
                <Setter Property="Padding" Value="5"/>
            </Style>


            <Style TargetType="DatePicker" x:Key="DatePickerStyle" BasedOn="{StaticResource MaterialDesignOutlinedDatePicker}">
                <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            </Style>

            <ControlTemplate x:Key="DataGridControlTemplate" TargetType="{x:Type DataGrid}">
                <Border BorderBrush="{StaticResource CardviewColor}" CornerRadius="5" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource CardviewColor}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                    <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                        <ScrollViewer.Template>
                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Button Command="ApplicationCommands.SelectAll" Focusable="False" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}">
                                        <Button.Visibility>
                                            <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                <Binding.ConverterParameter>
                                                    <DataGridHeadersVisibility>All</DataGridHeadersVisibility>
                                                </Binding.ConverterParameter>
                                            </Binding>
                                        </Button.Visibility>
                                    </Button>
                                    <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1">
                                        <DataGridColumnHeadersPresenter.Visibility>
                                            <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                <Binding.ConverterParameter>
                                                    <DataGridHeadersVisibility>Column</DataGridHeadersVisibility>
                                                </Binding.ConverterParameter>
                                            </Binding>
                                        </DataGridColumnHeadersPresenter.Visibility>
                                    </DataGridColumnHeadersPresenter>
                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" Grid.ColumnSpan="2" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Grid.Row="1"/>
                                    <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                    <Grid Grid.Column="1" Grid.Row="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </ScrollViewer.Template>
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </ScrollViewer>
                </Border>
            </ControlTemplate>




        </ResourceDictionary>

    </Application.Resources>
</Application>
